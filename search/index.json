[{"content":"RESTful 服务 基本概念 维基百科: https://zh.wikipedia.org/wiki/%E8%A1%A8%E7%8E%B0%E5%B1%82%E7%8A%B6%E6%80%81%E8%BD%AC%E6%8D%A2\n表现层状态转换（英语：Representational State Transfer，缩写：REST）是 Roy Thomas Fielding 博士于2000年在他的博士论文中提出来的一种万维网软件架构风格，目的是便于不同软件/程序在网络 （例如互联网）中互相传递信息。表现层状态转换是根基于超文本传输协议（HTTP）之上而确定的一组约束和属性， 是一种设计提供万维网络服务的软件构建风格。符合或兼容于这种架构风格（简称为 REST 或 RESTful） 的网络服务，允许客户端发出以统一资源标识符访问和操作网络资源的请求，而与预先定义好的无状态操作集一致化。 因此表现层状态转换提供了在互联网络的计算系统之间，彼此资源可交互使用的协作性质（interoperability）。\n资源(Resource) 当你在阅读这篇文章时候，文章内容本身就是一种资源，不管是在电脑，还是手机上，尽管看到的表现形式不同，但看到的都是同一篇文章。\n表征(Representation) 表征其实就是表现形式，表示出来的样子，就像在浏览器上请求阅读这篇文章的时候，你拿到的是服务器返回的 HTML，或者将这篇文章打印出来，拿到的就是一张纸。这些都是同一个资源的多种表征。\n状态(State) 在阅读文章时，通常会有下一篇，上一篇的按钮。如果我们想要向服务器请求下一篇文章，那么服务器就要知道当前文章，因为“下一篇”是一个相对的 概念，状态不是一个独立的概念，而是基于一个语境，某一时刻的样子。\n状态又分为有状态(Stateful)和无状态(Stateless)，都是相对于服务端来说的。服务端记住状态就是有状态，客户端记住状态就是无状态。 而 REST 其中的一个原则就是无状态原则。\n转移(Transfer) 不管是有状态还是无状态，获取下一篇文章这个动作都只能由服务端来完成。服务器通过某种方式，把“用户当前阅读的文章”转变成“下一篇文章”， 这就被称为“表征状态转移”。表征状态转移是由浏览器主动向服务器请求引发的，该请求导致了“在屏幕上显示出了下一篇文章的内容”。但这不是 浏览器的意图，浏览器是通过服务器响应的超文本来驱动状态转移的。\nREST 的六个原则 服务端与客户端分离(Client-Server)\n用户界面关注点和数据存储关注点的分离可以提高用户界面在多个平台的可移植性。\n无状态(Stateless)\nREST 希望从客户端发出的每个请求都必须包含所有的信息，服务端不能保存客户端的任何上下文信息，服务端通过客户端发送的状态信息来进行业务处理。\n可缓存(Cacheability)\n因为无状态的特性，为完成某个功能可能就需要多次请求，或者在请求中携带冗余的信息。为了缓解该情况，服务端的响应必须明确地或隐含地定义自身 是否可以被缓存。如果是响应是可缓存的，那么客户端缓存可以重用以前的响应以改进效率和可伸缩性。\n统一接口(Uniform Interface)\n为了得到统一的接口，REST 希望开发者面向资源编程，把软件系统设计的重点放在抽象系统该有哪些资源上，而不是抽象系统有哪些行为上。\n分层系统(Layered System)\n这里所指的分层并不是表示层、服务层、持久层这种意义上的分层，而是指客户端不能知道它是与最终服务器还是中间服务器进行交互。 中间服务器可以提供负载均衡和共享缓存的机制，提高系统的可扩展性。\n按需代码(Code-On-Demand)\n按需代码是一条可选的原则，指的是任何按照客户端的请求，将可执行的软件程序从服务器发送到客户端的技术。比如 JavaScript。\n什么样的服务才能叫 RESTful？ Leonard Richardson 曾经提出过一个 REST 服务成熟度模型，在这个模型里，从低到高分为 0 至 3 共 4 级：\nThe Swamp of POX：完全不 REST。 Resources：开始引入资源的概念。 HTTP Verbs：引入统一接口，映射到 HTTP 协议的方法上。 Hypermedia Controls：超文本驱动。 Martin Fowler 在一篇文章中通过一个实际例子来描述了在该模型下，实际的 API 是怎样的。\nLevel 0: The Swamp of Plain Old XML 当要去医院看病时，想要知道医生的空闲时段，医院的预约软件上提供了一个 /appointmentService 接口，通过传入日期、医生姓名作为参数，就可以得到医生在该日期下的空闲时间。\n1 2 3 4 5 6 POST /appointmentService HTTP/1.1 { date: \u0026#34;20100104\u0026#34;, docter: \u0026#34;mjones\u0026#34; } 服务器收到请求后，就会返回所需要结果。\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 HTTP/1.1 200 OK [ { start: \u0026#34;1400\u0026#34;, end:\u0026#34;1450\u0026#34;, docter: \u0026#34;mjones\u0026#34; }, { start: \u0026#34;1600\u0026#34;, end:\u0026#34;1650\u0026#34;, docter: \u0026#34;mjones\u0026#34; } ] 下一步是预约\n1 2 3 4 5 6 7 8 9 10 11 12 13 POST /appointmentService?action=confirm HTTP/1.1 { appointment: { date: \u0026#34;20100104\u0026#34;, start: \u0026#34;1400\u0026#34;, end: \u0026#34;1450\u0026#34;, docter: \u0026#34;mjones\u0026#34; }, patient: { name: \u0026#34;tom\u0026#34; } } 如果一切正常，就会收到一个预约成功的回复\n1 2 3 4 5 6 HTTP/1.1 200 OK { code: 0, message: \u0026#34;预约成功\u0026#34; } 如果出现了问题，比如说其他人在我之前预约，就会收到相应的错误信息\n1 2 3 4 5 6 HTTP/1.1 200 OK { code: 1, message: \u0026#34;预约失败，医生预约已满\u0026#34; } 这是一个很简单的基于 RPC 风格设计。\nLevel 1: Resources 实现 REST 的第一步就是要引入资源的概念，所有操作都围绕资源来进行。\n1 2 3 4 5 POST /docter/mjones HTTP/1.1 { date: \u0026#34;2010-01-04\u0026#34; } 然后，服务器返回一个包含 ID 的信息，因为医生的档期被视为一种资源。\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 HTTP/1.1 200 OK [ { id: 1234, start: \u0026#34;1400\u0026#34;, end:\u0026#34;1450\u0026#34;, docter: \u0026#34;mjones\u0026#34; }, { id: 5678, start: \u0026#34;1600\u0026#34;, end:\u0026#34;1650\u0026#34;, docter: \u0026#34;mjones\u0026#34; } ] 我觉得 14:00 到 14:50 比较合适\n1 2 3 4 5 POST /slots/1234 HTTP/1.1 { name: \u0026#34;tom\u0026#34; } 如果一切顺利，那么同样会收到和之前类似的答复。\n1 2 3 4 5 6 HTTP/1.1 200 OK { code: 0, message: \u0026#34;预约成功\u0026#34; } Level 2: HTTP Verbs 在 Level 0 和 Level 1 所有的交互中都是用了 HTTP POST，但在 Level 2 中不会这么做，而是尽可能地用 HTTP 本身的方式。 对于档期，我们会使用具有查询语义的 GET。\n1 GET /doctors/mjones/slots?date=20100104\u0026amp;status=open HTTP/1.1 服务器答复和之前相同。\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 HTTP/1.1 200 OK [ { id: 1234, start: \u0026#34;1400\u0026#34;, end:\u0026#34;1450\u0026#34;, docter: \u0026#34;mjones\u0026#34;, }, { id: 5678, start: \u0026#34;1600\u0026#34;, end:\u0026#34;1650\u0026#34;, docter: \u0026#34;mjones\u0026#34; } ] 然后我们需要一个可以改变状态的动词，在该场景下 POST 是更符合语义的。\n1 2 3 4 5 POST /slots/1234 HTTP/1.1 { name: \u0026#34;tom\u0026#34; } 如果一切顺利，服务将回复响应代码 201，以表明有新的资源。\n1 HTTP/1.1 201 Created 如果失败，比如有人已经预约。\n1 HTTP/1.1 409 Conflict 目前绝大多数的系统都能达到 Level 2。不过这种方案还不够完美，最主要一个问题是：我们如何知道预约 mjones 医生的档期，需要访问 \u0026ldquo;/slots/1234\u0026rdquo; 这个接口。\nLevel 3: Hypermedia Controls REST 认为除了第一个请求外，后续的请求都应该能够自己描述清楚可能发生的状态转移，由超文本自身来驱动。\n所以当第一个请求发生后\n1 GET /doctors/mjones/slots?date=20100104\u0026amp;status=open HTTP/1.1 响应里应该包括如何预约医生等操作。\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 HTTP/1.1 200 OK [ { id: 1234, start: \u0026#34;1400\u0026#34;, end:\u0026#34;1450\u0026#34;, docter: \u0026#34;mjones\u0026#34;, links: \u0026#34;/slots/1234\u0026#34; }, { id: 5678, start: \u0026#34;1600\u0026#34;, end:\u0026#34;1650\u0026#34;, docter: \u0026#34;mjones\u0026#34;, links: \u0026#34;/slots/5678\u0026#34; } ] 这样客户端就可以根据返回的响应，来决定自己的行为，实现后端模型驱动。\n","date":"2024-03-27T22:53:36+08:00","permalink":"https://heliosgo.github.io/p/restful-%E6%9C%8D%E5%8A%A1/","title":"RESTful 服务"},{"content":"This article offers a sample of basic Markdown syntax that can be used in Hugo content files, also it shows whether basic HTML elements are decorated with CSS in a Hugo theme.\nHeadings The following HTML \u0026lt;h1\u0026gt;—\u0026lt;h6\u0026gt; elements represent six levels of section headings. \u0026lt;h1\u0026gt; is the highest section level while \u0026lt;h6\u0026gt; is the lowest.\nH1 H2 H3 H4 H5 H6 Paragraph Xerum, quo qui aut unt expliquam qui dolut labo. Aque venitatiusda cum, voluptionse latur sitiae dolessi aut parist aut dollo enim qui voluptate ma dolestendit peritin re plis aut quas inctum laceat est volestemque commosa as cus endigna tectur, offic to cor sequas etum rerum idem sintibus eiur? Quianimin porecus evelectur, cum que nis nust voloribus ratem aut omnimi, sitatur? Quiatem. Nam, omnis sum am facea corem alique molestrunt et eos evelece arcillit ut aut eos eos nus, sin conecerem erum fuga. Ri oditatquam, ad quibus unda veliamenimin cusam et facea ipsamus es exerum sitate dolores editium rerore eost, temped molorro ratiae volorro te reribus dolorer sperchicium faceata tiustia prat.\nItatur? Quiatae cullecum rem ent aut odis in re eossequodi nonsequ idebis ne sapicia is sinveli squiatum, core et que aut hariosam ex eat.\nBlockquotes The blockquote element represents content that is quoted from another source, optionally with a citation which must be within a footer or cite element, and optionally with in-line changes such as annotations and abbreviations.\nBlockquote without attribution Tiam, ad mint andaepu dandae nostion secatur sequo quae. Note that you can use Markdown syntax within a blockquote.\nBlockquote with attribution Don\u0026rsquo;t communicate by sharing memory, share memory by communicating.\n— Rob Pike1\nTables Tables aren\u0026rsquo;t part of the core Markdown spec, but Hugo supports supports them out-of-the-box.\nName Age Bob 27 Alice 23 Inline Markdown within tables Italics Bold Code italics bold code A B C D E F Lorem ipsum dolor sit amet, consectetur adipiscing elit. Phasellus ultricies, sapien non euismod aliquam, dui ligula tincidunt odio, at accumsan nulla sapien eget ex. Proin eleifend dictum ipsum, non euismod ipsum pulvinar et. Vivamus sollicitudin, quam in pulvinar aliquam, metus elit pretium purus Proin sit amet velit nec enim imperdiet vehicula. Ut bibendum vestibulum quam, eu egestas turpis gravida nec Sed scelerisque nec turpis vel viverra. Vivamus vitae pretium sapien Code Blocks Code block with backticks 1 2 3 4 5 6 7 8 9 10 \u0026lt;!doctype html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;utf-8\u0026#34;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Code block indented with four spaces \u0026lt;!doctype html\u0026gt; \u0026lt;html lang=\u0026quot;en\u0026quot;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026quot;utf-8\u0026quot;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Code block with Hugo\u0026rsquo;s internal highlight shortcode 1 2 3 4 5 6 7 8 9 10 \u0026lt;!doctype html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;utf-8\u0026#34;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Diff code block 1 2 3 4 5 [dependencies.bevy] git = \u0026#34;https://github.com/bevyengine/bevy\u0026#34; rev = \u0026#34;11f52b8c72fc3a568e8bb4a4cd1f3eb025ac2e13\u0026#34; - features = [\u0026#34;dynamic\u0026#34;] + features = [\u0026#34;jpeg\u0026#34;, \u0026#34;dynamic\u0026#34;] List Types Ordered List First item Second item Third item Unordered List List item Another item And another item Nested list Fruit Apple Orange Banana Dairy Milk Cheese Other Elements — abbr, sub, sup, kbd, mark GIF is a bitmap image format.\nH2O\nXn + Yn = Zn\nPress CTRL + ALT + Delete to end the session.\nMost salamanders are nocturnal, and hunt for insects, worms, and other small creatures.\nHyperlinked image The above quote is excerpted from Rob Pike\u0026rsquo;s talk during Gopherfest, November 18, 2015.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","date":"2019-03-11T00:00:00Z","image":"https://heliosgo.github.io/p/markdown-syntax-guide/pawel-czerwinski-8uZPynIu-rQ-unsplash_hud7e36f7e20e71be184458283bdae4646_55974_120x120_fill_q75_box_smart1.jpg","permalink":"https://heliosgo.github.io/p/markdown-syntax-guide/","title":"Markdown Syntax Guide"},{"content":"Hugo ships with several Built-in Shortcodes for rich content, along with a Privacy Config and a set of Simple Shortcodes that enable static and no-JS versions of various social media embeds.\nYouTube Privacy Enhanced Shortcode Twitter Simple Shortcode “In addition to being more logical, asymmetry has the advantage that its complete appearance is far more optically effective than symmetry.”\n— Jan Tschichold pic.twitter.com/gcv7SrhvJb\n\u0026mdash; Design Reviewed | Graphic Design History (@DesignReviewed) January 17, 2019 Vimeo Simple Shortcode bilibilibi Shortcode Gist Shortcode Gitlab Snippets Shortcode Quote Shortcode Stack adds a quote shortcode. For example:\nLorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\n― A famous person, The book they wrote Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\n― Anonymous book Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\n― Some book Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\n― Somebody","date":"2019-03-10T00:00:00Z","permalink":"https://heliosgo.github.io/p/rich-content/","title":"Rich Content"},{"content":"Lorem est tota propiore conpellat pectoribus de pectora summo.\nRedit teque digerit hominumque toris verebor lumina non cervice subde tollit usus habet Arctonque, furores quas nec ferunt. Quoque montibus nunc caluere tempus inhospita parcite confusaque translucet patri vestro qui optatis lumine cognoscere flos nubis! Fronde ipsamque patulos Dryopen deorum.\nExierant elisi ambit vivere dedere Duce pollice Eris modo Spargitque ferrea quos palude Rursus nulli murmur; hastile inridet ut ab gravi sententia! Nomine potitus silentia flumen, sustinet placuit petis in dilapsa erat sunt. Atria tractus malis.\nComas hunc haec pietate fetum procerum dixit Post torum vates letum Tiresia Flumen querellas Arcanaque montibus omnes Quidem et Vagus elidunt The Van de Graaf Canon\nMane refeci capiebant unda mulcebat Victa caducifer, malo vulnere contra dicere aurato, ludit regale, voca! Retorsit colit est profanae esse virescere furit nec; iaculi matertera et visa est, viribus. Divesque creatis, tecta novat collumque vulnus est, parvas. Faces illo pepulere tempus adest. Tendit flamma, ab opes virum sustinet, sidus sequendo urbis.\nIubar proles corpore raptos vero auctor imperium; sed et huic: manus caeli Lelegas tu lux. Verbis obstitit intus oblectamina fixis linguisque ausus sperare Echionides cornuaque tenent clausit possit. Omnia putatur. Praeteritae refert ausus; ferebant e primus lora nutat, vici quae mea ipse. Et iter nil spectatae vulnus haerentia iuste et exercebat, sui et.\nEurytus Hector, materna ipsumque ut Politen, nec, nate, ignari, vernum cohaesit sequitur. Vel mitis temploque vocatus, inque alis, oculos nomen non silvis corpore coniunx ne displicet illa. Crescunt non unus, vidit visa quantum inmiti flumina mortis facto sic: undique a alios vincula sunt iactata abdita! Suspenderat ego fuit tendit: luna, ante urbem Propoetides parte.\n","date":"2019-03-09T00:00:00Z","image":"https://heliosgo.github.io/p/placeholder-text/matt-le-SJSpo9hQf7s-unsplash_hu958d513eeefe5556a31d065479ecc5ac_14205_120x120_fill_q75_box_smart1.jpg","permalink":"https://heliosgo.github.io/p/placeholder-text/","title":"Placeholder Text"},{"content":"Mathematical notation in a Hugo project can be enabled by using third party JavaScript libraries.\nIn this example we will be using KaTeX\nCreate a partial under /layouts/partials/math.html Within this partial reference the Auto-render Extension or host these scripts locally. Include the partial in your templates like so: 1 2 3 {{ if or .Params.math .Site.Params.math }} {{ partial \u0026#34;math.html\u0026#34; . }} {{ end }} To enable KaTeX globally set the parameter math to true in a project\u0026rsquo;s configuration To enable KaTeX on a per page basis include the parameter math: true in content files Note: Use the online reference of Supported TeX Functions\nExamples Inline math: $\\varphi = \\dfrac{1+\\sqrt5}{2}= 1.6180339887…$\nBlock math: $$ \\varphi = 1+\\frac{1} {1+\\frac{1} {1+\\frac{1} {1+\\cdots} } } $$\n","date":"2019-03-08T00:00:00Z","permalink":"https://heliosgo.github.io/p/math-typesetting/","title":"Math Typesetting"},{"content":"Emoji can be enabled in a Hugo project in a number of ways.\nThe emojify function can be called directly in templates or Inline Shortcodes.\nTo enable emoji globally, set enableEmoji to true in your site\u0026rsquo;s configuration and then you can type emoji shorthand codes directly in content files; e.g.\n🙈 :see_no_evil: 🙉 :hear_no_evil: 🙊 :speak_no_evil:\nThe Emoji cheat sheet is a useful reference for emoji shorthand codes.\nN.B. The above steps enable Unicode Standard emoji characters and sequences in Hugo, however the rendering of these glyphs depends on the browser and the platform. To style the emoji you can either use a third party emoji font or a font stack; e.g.\n1 2 3 .emoji { font-family: Apple Color Emoji, Segoe UI Emoji, NotoColorEmoji, Segoe UI Symbol, Android Emoji, EmojiSymbols; } ","date":"2019-03-05T00:00:00Z","image":"https://heliosgo.github.io/p/emoji-support/the-creative-exchange-d2zvqp3fpro-unsplash_huf941de4769045cdfa8c9ee7036519a2a_35369_120x120_fill_q75_box_smart1.jpg","permalink":"https://heliosgo.github.io/p/emoji-support/","title":"Emoji Support"}]